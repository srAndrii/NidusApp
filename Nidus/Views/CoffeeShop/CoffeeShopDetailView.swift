import SwiftUI
import Kingfisher

struct CoffeeShopDetailView: View {
    // MARK: - –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
    let coffeeShop: CoffeeShop
    @StateObject private var viewModel = CoffeeShopDetailViewModel(coffeeShopRepository: DIContainer.shared.coffeeShopRepository)
    @Environment(\.presentationMode) var presentationMode
    @State private var selectedCategory: String? = nil
    
    // MARK: - View
    var body: some View {
        ZStack(alignment: .topLeading) {
            // –§–æ–Ω
            Color("backgroundColor")
                .edgesIgnoringSafeArea(.all)
            
            // –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            if #available(iOS 16.0, *) {
                // –î–ª—è iOS 16+ –∑ –Ω–æ–≤–æ—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é
                NavigationStack {
                    // –û–±–≥–æ—Ä—Ç–∞—î–º–æ –≤ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
                    ScrollingCoordinatorView {
                        scrollContentView
                    }
                    .navigationDestination(for: MenuItem.self) { item in
                        MenuItemDetailView(menuItem: item)
                    }
                }
                .navigationBarHidden(true)
            } else {
                // –î–ª—è iOS 15 —ñ —Ä–∞–Ω—ñ—à–µ
                // –û–±–≥–æ—Ä—Ç–∞—î–º–æ –≤ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
                ScrollingCoordinatorView {
                    scrollContentView
                }
            }
            
            // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" - —Ç–µ–ø–µ—Ä –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è–º —ñ –∫–æ–ª—å–æ—Ä–æ–º
            BackButtonView(color: Color("primary"), backgroundColor: Color.black.opacity(0.4))
                .padding(.top, getSafeAreaInsets().top + 10)
                .padding(.leading, 16)
                .zIndex(2) // –©–æ–± –∫–Ω–æ–ø–∫–∞ –±—É–ª–∞ –Ω–∞–¥ –≤—Å—ñ–º–∞ —ñ–Ω—à–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
        }
        .edgesIgnoringSafeArea(.top)
        .navigationBarHidden(true)
        .onAppear {
            print("üì± CoffeeShopDetailView –∑'—è–≤–∏–≤—Å—è")
            viewModel.loadMenuGroups(coffeeShopId: coffeeShop.id)
            
            // –î–æ–¥–∞—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –≥—Ä—É–ø
            DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) {
                print("üìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –≥—Ä—É–ø:")
                for group in viewModel.menuGroups {
                    print("üìä –ì—Ä—É–ø–ø–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: \(group.id), –Ω–∞–∑–≤–∞: \(group.name)")
                }
            }
        }
    }
    
    // MARK: - –ì–æ–ª–æ–≤–Ω–∏–π —Å–∫—Ä–æ–ª–∞–±–µ–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    private var scrollContentView: some View {
        // –î–æ–¥–∞—î–º–æ @EnvironmentObject –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
        ScrollViewReader { proxy in
            print("üîç ScrollViewReader —Å—Ç–≤–æ—Ä–µ–Ω–æ")
            
            // –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞–Ω —Å–∫—Ä–æ–ª—ñ–Ω–≥—É –∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
            return GeometryReader { geometry in
                ScrollView(showsIndicators: false) {
                    // –û–±'—î–¥–Ω–∞–Ω–æ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –æ–¥–∏–Ω VStack
                    VStack(spacing: 0) {
                        // –†–æ–∑—Ç—è–≥—É–≤–∞–Ω–∞ —à–∞–ø–∫–∞ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º —ñ –Ω–∞–∫–ª–∞–¥–µ–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
                        StretchableHeaderView(coffeeShop: coffeeShop)
                            .frame(height: 320)
                            .id("top") // –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–æ –≤–µ—Ä—Ö—É
                            .onAppear {
                                print("üîç StretchableHeaderView –∑'—è–≤–∏–≤—Å—è")
                            }

                        // –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                        if viewModel.isLoading {
                            loadingView
                                .padding(.top, 20)
                        } else if viewModel.menuGroups.isEmpty {
                            emptyStateView
                                .padding(.top, 20)
                        } else {
                            // –§—ñ–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
                            categoryFilterView(proxy: proxy, geometry: geometry)

                            // –ú–µ–Ω—é –∫–∞–≤'—è—Ä–Ω—ñ - –≥—Ä—É–ø–∏ –º–µ–Ω—é –∑ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏
                            VStack(spacing: 24) { // –ó–±—ñ–ª—å—à–µ–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø –º—ñ–∂ –≥—Ä—É–ø–∞–º–∏ –¥–ª—è –∫—Ä–∞—â–æ—ó –≤—ñ–∑—É–∞–ª—å–Ω–æ—ó —ñ—î—Ä–∞—Ä—Ö—ñ—ó
                                ForEach(viewModel.menuGroups) { group in
                                    MenuGroupView(group: group)
                                        .id(group.id) // ID –ø–µ—Ä–µ–º—ñ—â–µ–Ω–æ —Å—é–¥–∏ –¥–ª—è –±—ñ–ª—å—à —Å—Ç–∞–±—ñ–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ ScrollViewReader
                                        .onAppear {
                                            print("üîç MenuGroupView –∑'—è–≤–∏–≤—Å—è –¥–ª—è –≥—Ä—É–ø–∏: \(group.id)")
                                        }
                                }
                                
                                // –î–æ–¥–∞—î–º–æ –Ω–µ–≤–∏–¥–∏–º–∏–π —Å–ø–µ–π—Å–µ—Ä –≤–Ω–∏–∑—É –¥–ª—è –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –º—ñ—Å—Ü—è –ø—ñ–¥ –æ—Å—Ç–∞–Ω–Ω—å–æ—é –≥—Ä—É–ø–æ—é
                                // –æ—Å–æ–±–ª–∏–≤–æ –≤–∞–∂–ª–∏–≤–æ –¥–ª—è –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ä–æ–∑–º—ñ—Ä–∞–º–∏ –µ–∫—Ä–∞–Ω—É
                                Spacer()
                                    .frame(height: 100) // –í–∏—Å–æ—Ç–∞ –ø—Ä–∏–±–ª–∏–∑–Ω–æ –¥–æ—Ä—ñ–≤–Ω—é—î –≤–∏—Å–æ—Ç—ñ —Ç–∞–±-–±–∞—Ä—É –∑ –∑–∞–ø–∞—Å–æ–º
                                    .id("bottom_spacer")
                            }
                            .padding(.horizontal, 16)
                            .padding(.top, 8)
                        }
                    }
                }
                .edgesIgnoringSafeArea(.top)
                .background(Color("backgroundColor"))
                // –î–æ–¥–∞—î–º–æ –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞—á –¥–ª—è ScrollState
                .onScrollStateChange(proxy: proxy)
            }
        }
    }
    
    // MARK: - –§—ñ–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    private func categoryFilterView(proxy: ScrollViewProxy, geometry: GeometryProxy) -> some View {
        ScrollView(.horizontal, showsIndicators: false) {
            HStack(spacing: 10) {
                // –ö–Ω–æ–ø–∫–∞ "–í—Å—ñ"
                CategoryButton(
                    title: "–í—Å—ñ",
                    isSelected: selectedCategory == nil,
                    action: {
                        // –°–ø–µ—Ä—à—É –∑–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
                        selectedCategory = nil
                        
                        print("üîç –°–∫—Ä–æ–ª—ñ–Ω–≥ –¥–æ –≤–µ—Ä—Ö—É (–í—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó)")
                        
                        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ EnvironmentObject –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
                        scrollToTop(proxy: proxy)
                    }
                )
                
                // –ö–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑ —Ñ—É–Ω–∫—Ü—ñ—î—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
                ForEach(viewModel.menuGroups) { group in
                    CategoryButton(
                        title: group.name,
                        isSelected: selectedCategory == group.id,
                        action: {
                            // –°–ø–µ—Ä—à—É –∑–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
                            selectedCategory = group.id
                            
                            print("üöÄ –ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –≥—Ä—É–ø–∏: \(group.id), –Ω–∞–∑–≤–∞: \(group.name)")
                            
                            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ EnvironmentObject –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
                            scrollToGroup(id: group.id, proxy: proxy, geometry: geometry)
                        }
                    )
                }
            }
            .padding(.horizontal, 16)
            .padding(.vertical, 8)
        }
    }
    
    // MARK: - –î–æ–ø–æ–º—ñ–∂–Ω—ñ –º–µ—Ç–æ–¥–∏ —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
    
    // –°–∫—Ä–æ–ª –¥–æ –≤–µ—Ä—Ö—É
    private func scrollToTop(proxy: ScrollViewProxy) {
        withAnimation {
            proxy.scrollTo("top", anchor: .top)
        }
    }
    
    // –°–∫—Ä–æ–ª –¥–æ –≥—Ä—É–ø–∏
    private func scrollToGroup(id: String, proxy: ScrollViewProxy, geometry: GeometryProxy) {
        let isLastGroup = id == viewModel.menuGroups.last?.id
        let anchor: UnitPoint = isLastGroup ? .bottom : .top
        
        // –°–∫—Ä–æ–ª—ñ–Ω–≥ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
        withAnimation(.easeInOut(duration: 0.5)) {
            proxy.scrollTo(id, anchor: anchor)
        }
        
        // –î–æ–¥–∞—î–º–æ —Ä–µ–∑–µ—Ä–≤–Ω—É –ª–æ–≥—ñ–∫—É —á–µ—Ä–µ–∑ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.2) {
            if isLastGroup {
                // –î–ª—è –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –≥—Ä—É–ø–∏ —Å–∫—Ä–æ–ª–∏–º–æ –¥–æ –Ω–∞—à–æ–≥–æ —Å–ø–µ–π—Å–µ—Ä–∞
                proxy.scrollTo("bottom_spacer", anchor: .top)
            } else {
                // –î–ª—è —ñ–Ω—à–∏—Ö –≥—Ä—É–ø —Ä–æ–±–∏–º–æ —Ä–µ–∑–µ—Ä–≤–Ω–∏–π —Å–∫—Ä–æ–ª
                withAnimation {
                    proxy.scrollTo(id, anchor: .top)
                }
            }
        }
    }
    
    /// –ü–æ–∫–∞–∑—É—î —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    private var loadingView: some View {
        ProgressView("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é...")
            .font(.subheadline)
            .frame(maxWidth: .infinity, alignment: .center)
            .padding(.top, 40)
            .foregroundColor(Color("primaryText"))
    }
    
    /// –ü–æ–∫–∞–∑—É—î —Å—Ç–∞–Ω, –∫–æ–ª–∏ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö
    private var emptyStateView: some View {
        Text("–ú–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ")
            .font(.headline)
            .foregroundColor(Color("secondaryText"))
            .frame(maxWidth: .infinity, alignment: .center)
            .padding(.top, 40)
    }
    
    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤ –±–µ–∑–ø–µ—á–Ω–æ—ó –∑–æ–Ω–∏
    private func getSafeAreaInsets() -> EdgeInsets {
        // –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ windows –¥–ª—è iOS 15+
        guard let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
              let window = windowScene.windows.first else {
            return EdgeInsets()
        }
        
        let safeAreaInsets = window.safeAreaInsets
        return EdgeInsets(
            top: safeAreaInsets.top,
            leading: safeAreaInsets.left,
            bottom: safeAreaInsets.bottom,
            trailing: safeAreaInsets.right
        )
    }
}

// MARK: - Preview
struct CoffeeShopDetailView_Previews: PreviewProvider {
    static var previews: some View {
        CoffeeShopDetailView(coffeeShop: MockData.singleCoffeeShop)
            .environmentObject(AuthenticationManager())
            .preferredColorScheme(.dark)
    }
}

// MARK: - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Å–∫—Ä–æ–ª—ñ–Ω–≥—É
struct ScrollingCoordinatorView<Content: View>: View {
    let content: Content
    @State private var selectedGroupId: String? = nil
    
    init(@ViewBuilder content: () -> Content) {
        self.content = content()
    }
    
    var body: some View {
        content
            .environmentObject(ScrollState())
    }
}

// –°—Ç–∞–Ω —Å–∫—Ä–æ–ª—ñ–Ω–≥—É, —è–∫–∏–π –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
class ScrollState: ObservableObject {
    @Published var scrollToGroupId: String? = nil
    
    func scrollTo(groupId: String) {
        print("üåü ScrollState: –ó–∞–ø–∏—Ç –Ω–∞ —Å–∫—Ä–æ–ª—ñ–≥ –¥–æ –≥—Ä—É–ø–∏ \(groupId)")
        self.scrollToGroupId = groupId
        
        // –°–∫–∏–¥–∞—î–º–æ ID –ø—ñ—Å–ª—è –∫–æ—Ä–æ—Ç–∫–æ—ó –∑–∞—Ç—Ä–∏–º–∫–∏
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) { [weak self] in
            self?.scrollToGroupId = nil
        }
    }
}

// MARK: - –ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è —Ä–µ–∞–≥—É–≤–∞–Ω–Ω—è –Ω–∞ –∑–º—ñ–Ω–∏ –≤ ScrollState
extension View {
    func onScrollStateChange(proxy: ScrollViewProxy) -> some View {
        self.modifier(ScrollStateChangeModifier(proxy: proxy))
    }
}

struct ScrollStateChangeModifier: ViewModifier {
    @EnvironmentObject private var scrollState: ScrollState
    let proxy: ScrollViewProxy
    
    func body(content: Content) -> some View {
        content
            .onChange(of: scrollState.scrollToGroupId) { id in
                if let groupId = id {
                    print("üìú ScrollStateChangeModifier: –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ \(groupId)")
                    
                    // –°–ø—Ä–æ–±–∞ 1: –Ω–µ–≥–∞–π–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
                    withAnimation {
                        proxy.scrollTo(groupId, anchor: .top)
                    }
                    
                    // –°–ø—Ä–æ–±–∞ 2: –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ
                    DispatchQueue.main.asyncAfter(deadline: .now() + 0.1) {
                        withAnimation {
                            proxy.scrollTo(groupId, anchor: .top)
                        }
                    }
                }
            }
    }
}

//
//  CartService.swift
//  Nidus
//
//  Created by Andrii Liakhovych on 5/18/25.
//

import Foundation
import Combine

class CartService {
    // –°–∏–Ω–≥–ª—Ç–æ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Å–µ—Ä–≤—ñ—Å—É
    static let shared = CartService()
    
    // –ü—É–±–ª—ñ–∫–∞—Ç–æ—Ä –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω–∏ –≤ –∫–æ—Ä–∑–∏–Ω—ñ
    private let cartSubject = PassthroughSubject<Cart, Never>()
    var cartPublisher: AnyPublisher<Cart, Never> {
        return cartSubject.eraseToAnyPublisher()
    }
    
    // –ö–ª—é—á –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –≤ UserDefaults
    private let cartStorageKey = "nidus_cart"
    
    // –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–æ—Ä–∑–∏–Ω–∏
    private var cart = Cart()
    
    // –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ TabBarManager –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–µ–π–¥–∂–∞
    private weak var tabBarManager: TabBarManager?
    
    private init() {
        // –ü—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ—Ä–∑–∏–Ω—É –∑ UserDefaults
        if let savedCart = loadCart() {
            self.cart = savedCart
        }
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–±–±–µ—Ä—É –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    func setupTabBarManager(_ manager: TabBarManager) {
        print("üìù CartService.setupTabBarManager: –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ TabBarManager")
        self.tabBarManager = manager
        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ
        updateBadgeCount()
        print("‚úÖ CartService.setupTabBarManager: TabBarManager —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —ñ –±–µ–π–¥–∂ –æ–Ω–æ–≤–ª–µ–Ω–æ")
    }
    
    // MARK: - –ü—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—Ä–∑–∏–Ω–æ—é
    
    // –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–æ—Ä–∑–∏–Ω–∏
    func getCart() -> Cart {
        return cart
    }
    
    // –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—Ä–∑–∏–Ω–∏
    func addItem(_ item: CartItem) -> Bool {
        print("üìù CartService: –°–ø—Ä–æ–±–∞ –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—Ä–∑–∏–Ω–∏: \(item.name)")
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –∑ —Ü—ñ—î—ó –∫–∞–≤'—è—Ä–Ω—ñ
        if cart.canAddItemFromCoffeeShop(coffeeShopId: item.coffeeShopId) {
            print("‚úÖ CartService: –¢–æ–≤–∞—Ä \(item.name) –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∑ –∫–∞–≤'—è—Ä–Ω—ñ \(item.coffeeShopId)")
            var updatedCart = cart
            updatedCart.addItem(item)
            cart = updatedCart
            saveCart()
            cartSubject.send(cart)
            
            // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ
            updateBadgeCount()
            
            print("‚úÖ CartService: –¢–æ–≤–∞—Ä —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ, –Ω–æ–≤–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤: \(cart.items.count)")
            return true
        }
        print("‚ùå CartService: –ù–µ–º–æ–∂–ª–∏–≤–æ –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –∑ —ñ–Ω—à–æ—ó –∫–∞–≤'—è—Ä–Ω—ñ. –ü–æ—Ç–æ—á–Ω–∞ –∫–∞–≤'—è—Ä–Ω—è: \(cart.coffeeShopId ?? "–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"), –Ω–æ–≤–∞ –∫–∞–≤'—è—Ä–Ω—è: \(item.coffeeShopId)")
        return false
    }
    
    // –û–Ω–æ–≤–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É
    func updateQuantity(for itemId: String, quantity: Int) {
        var updatedCart = cart
        updatedCart.updateQuantity(for: itemId, quantity: quantity)
        cart = updatedCart
        saveCart()
        cartSubject.send(cart)
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ
        updateBadgeCount()
    }
    
    // –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä –∑–∞ ID
    func removeItem(withId id: String) {
        var updatedCart = cart
        updatedCart.removeItem(withId: id)
        cart = updatedCart
        saveCart()
        cartSubject.send(cart)
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ
        updateBadgeCount()
    }
    
    // –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º
    func removeItem(at index: Int) {
        var updatedCart = cart
        updatedCart.removeItem(at: index)
        cart = updatedCart
        saveCart()
        cartSubject.send(cart)
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ
        updateBadgeCount()
    }
    
    // –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É
    func clearCart() {
        var updatedCart = cart
        updatedCart.clear()
        cart = updatedCart
        saveCart()
        cartSubject.send(cart)
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ
        updateBadgeCount()
    }
    
    // MARK: - –ü—Ä–∏–≤–∞—Ç–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ö–æ–≤–∏—â–µ–º
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ —Ç–æ–≤–∞—Ä—ñ–≤ —É –±–µ–π–¥–∂—ñ —Ç–∞–±–±–∞—Ä—É
    private func updateBadgeCount() {
        DispatchQueue.main.async {
            if let tabBarManager = self.tabBarManager {
                tabBarManager.updateCartItemsCount(self.cart.itemCount)
                print("üìù CartService.updateBadgeCount: –û–Ω–æ–≤–ª–µ–Ω–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∫–æ—à–∏–∫–∞ –¥–æ \(self.cart.itemCount)")
            } else {
                print("‚ö†Ô∏è CartService.updateBadgeCount: TabBarManager –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            }
        }
    }
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –∑ UserDefaults
    private func loadCart() -> Cart? {
        guard let data = UserDefaults.standard.data(forKey: cartStorageKey) else {
            print("üìù CartService.loadCart: –ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö –∫–æ—Ä–∑–∏–Ω–∏")
            return nil
        }
        
        do {
            let decoder = JSONDecoder()
            let loadedCart = try decoder.decode(Cart.self, from: data)
            print("‚úÖ CartService.loadCart: –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∫–æ—Ä–∑–∏–Ω—É –∑ \(loadedCart.items.count) —Ç–æ–≤–∞—Ä–∞–º–∏")
            return loadedCart
        } catch {
            print("‚ùå CartService.loadCart: –ü–æ–º–∏–ª–∫–∞ –¥–µ–∫–æ–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏: \(error)")
            return nil
        }
    }
    
    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –≤ UserDefaults
    private func saveCart() {
        do {
            let encoder = JSONEncoder()
            let data = try encoder.encode(cart)
            UserDefaults.standard.set(data, forKey: cartStorageKey)
            print("‚úÖ CartService.saveCart: –ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∞ –∑ \(cart.items.count) —Ç–æ–≤–∞—Ä–∞–º–∏")
        } catch {
            print("‚ùå CartService.saveCart: –ü–æ–º–∏–ª–∫–∞ –∫–æ–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏: \(error)")
        }
    }
}
